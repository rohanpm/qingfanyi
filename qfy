#!/usr/bin/env python
# coding=utf-8

import signal

from pyatspi import Registry
# NOTE: keybinder MUST be imported after pyatspi to avoid hitting an assert in pyatspi
import keybinder

import gtk
import gtk.gdk

from qingfanyi import debug
from qingfanyi.atspi import active_window
from qingfanyi.dict import open_dict
from qingfanyi.snapshot import Snapshot

def on_shortcut(dic):
    window = active_window()
    if not window:
        debug('No active window.  Do nothing.')
        return

    snapshot = Snapshot(window, dic)
    (window_x, window_y, width, height) = snapshot.rect
    src_pb = snapshot.pixbuf

    copy_pb = []
    for m in snapshot.matches:
        (x, y, w, h) = m.rect
        x -= window_x
        y -= window_y
        rect = (x, y, w, h)
        sub = src_pb.subpixbuf(*rect).copy()
        copy_pb.append((sub, rect))

    mod = src_pb.composite_color_simple(width, height, gtk.gdk.INTERP_NEAREST, 127, 2, 0, 0)

    for (pb, rect) in copy_pb:
        (x, y, w, h) = rect
        pb.copy_area(0, 0, w, h, mod, x, y)

    img = gtk.Image()
    img.set_from_pixbuf(mod)
    img.show()

    win = gtk.Window()
    win.add(img)
    win.set_resizable(False)
    win.set_decorated(False)
    win.move(window_x, window_y)
    win.show()



def main():
    with open_dict() as d:
        keystr = "<Ctrl><Alt>z"
        assert keybinder.bind(keystr, on_shortcut, d)
        signal.signal(signal.SIGINT, Registry.stop)
        signal.signal(signal.SIGTERM, Registry.stop)
        print "Entering loop"
        Registry.start()
        print "Done..."


if __name__ == '__main__':
    main()
